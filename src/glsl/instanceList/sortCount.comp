#version 460
#pragma shader_stage(compute)

layout(local_size_x = 1024) in;

#include "../types.glsl"

layout(binding = 0) uniform InstanceCount {
	uvec3 u_instanceCountGroups;
	uint u_instanceCount;
};
layout (binding = 1, std430) restrict readonly buffer Instances {
	Instance b_instances[];
};
layout (binding = 2, std430) restrict writeonly buffer Commands {
	Command b_commands[];
};

void main() {
	
	uint gid = gl_GlobalInvocationID.x;
	if (gid >= u_instanceCount)
		return;
	
	uint meshIdx = b_instances[gid].meshIdx;
	if (meshIdx != -1u)
		atomicAdd(b_commands[meshIdx].instanceCount, 1);
	
}
